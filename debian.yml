
# code: language=ansible
---
- hosts: localhost
  connection: local
  vars_files: ["var.yaml"]
  tasks:

    - name: Install
      block:
        - name: "Install> install desktop environment"
          tags: [ gnome, never]
          apt:
            name: [ gnome-core, gnome-tweaks]

        - name: Install> lxqt
          tags: [ lxqt, never]
          apt:
            name: [ lxqt ]

        - name: "Install> apps"
          apt:
            name: "{{ INSTALL_APPS }}"

        - name: Install> snap
          block:
            - name: Install> snap> classic
              snap:
                name: ["code"]
                classic: True
            - name: Install> snap> normal
              snap:
                name: ["discord"]

        - name: Install> chrome
          block:
            - name: Install> chrome> download
              get_url:
                url: https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
                dest: /tmp/google-chrome-stable_current_amd64.deb
            - name: Install> chrome> install
              apt:
                deb: /tmp/google-chrome-stable_current_amd64.deb

    - name: Add jan tu sudo group
      loop: "{{ SUDO_USERS }}"
      user:
        name: "{{ item }}"
        groups: sudo
        append: true

- hosts: localhost
  connection: local
  become: True
  vars_files: ["var.yaml"]
  become_user: "{{ USERS[0].USERNAME }}"
  tasks:

    - name: Oh My zsh
      block:
        - name: "Oh My zsh> check if zsh is default shell"
          stat:
            path: ~/.oh-my-zsh
          register: oh_my_zsh

        - name: "Oh My zsh> install"
          when: not (oh_my_zsh.stat.isdir is defined and oh_my_zsh.stat.isdir)
          shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

        - name: "Oh My zsh> set zsh as default shell"
          become: True
          become_user: root
          user:
            name: "{{ USERS[0].USERNAME }}"
            shell: /bin/zsh

    - name: "Dotfiles> check if dotfiles directory exists"
      stat:
        path: "{{ path }}"
      register: dir

    - name: Dotfiles
      when: not dir.stat.exists
      vars:
        repo: https://github.com/dvojak-cz/DotFiles.git
        path: "~/.dotfiles"
        ssh_repo: "git@github.com:dvojak-cz/DotFiles.git"
      block:

        - name: "Dotfiles> clone"
          git:
            repo: "{{ repo }}"
            dest: "{{ path }}"
            clone: yes
            update: yes

        - name: "Dotfiles> set remote url to ssh"
          command:
            cmd: git remote set-url origin {{ ssh_repo }}
            chdir: "{{ path }}"

        - name: Dotfiles> appy
          tags: [never, dotfiles]
          command:
            cmd: make
            chdir: "{{ path }}"

        - name: Dotfiles> install zsh-autosuggestions
          tags: [never, dotfiles]
          git:
            repo: https://github.com/zsh-users/zsh-autosuggestions
            dest: "~/.oh-my-zsh/custom/plugins/zsh-autosuggestions"

        - name: Dotfiles> install zsh-syntax-highlighting
          tags: [never, dotfiles]
          git:
            repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
            dest: "~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting"

        - name: Dotfiles> appy gnome
          tags: [gnome,never]
          command:
            cmd: make gnome
            chdir: "{{ path }}"

    - name: Users home
      loop: "{{ USERS[0].DIR }}"
      file:
        path: "{{ item }}"
        state: directory