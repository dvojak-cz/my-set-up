# code: language=ansible
---
- hosts: localhost
  connection: local
  vars:
    keyrings: /etc/apt/keyrings
    user: jan
  tasks:
    - name: Add apt repos
      block:
        - name: "Apt repo> create dir for keyrings"
          file:
            path: "{{ keyrings }}"
            state: directory
        - name: Apt repo> add suse repo key
          get_url:
            url: https://download.opensuse.org/repositories/home:manuelschneid3r/Debian_12/Release.key
            dest: "{{ keyrings }}/suse.key"
        - name: "Apt repo> add Microsoft repo key"
          get_url:
            url: https://packages.microsoft.com/keys/microsoft.asc
            dest: "{{ keyrings }}/microsoft.asc"
        - name: "Apt repo> add google repo key"
          get_url:
            url: https://dl.google.com/linux/linux_signing_key.pub
            dest: "{{ keyrings }}/google.pub"
        - name: "Apt repo> add Suse repo"
          apt_repository:
            repo: "deb [arch=amd64 signed-by={{ keyrings }}/suse.key] http://download.opensuse.org/repositories/home:/manuelschneid3r/Debian_9.0/ /"
            filename: suse
        - name: "Apt repo> add Microsoft repo"
          apt_repository:
            repo: "deb [arch=amd64 signed-by={{ keyrings }}/microsoft.asc] https://packages.microsoft.com/repos/code stable main"
            filename: vscode
        - name: "Apt repo> add google repo"
          apt_repository:
            repo: "deb [arch=amd64 signed-by={{ keyrings }}/google.pub] http://dl.google.com/linux/chrome/deb/ stable main"
            filename: google-chrome
    - name: Install
      block:
        - name: "Install> apt udate cache"
          apt:
            update_cache: yes
        - name: "Install> install desktop environment"
          apt:
            name: ["lxqt"]
            state: present
        - name: "Install> GUI apps"
          apt:
            name: ["code", "terminator", "google-chrome-stable", "firefox-esr", "albert"]
            state: present
        - name: "Install> CLI apps"
          apt:
            name: ["mc", "tmux", "vim", "aptitude", "tig", "curl", "neofetch"]
            state: present
        - name: "Install> tools"
          apt:
            name: ["ansible", "docker-compose", "docker.io", "git", "stow", "zsh"]
            state: present
    - name: Oh My zsh
      become: True
      become_user: "{{ user }}"
      block:
        - name: "Oh My zsh> check if zsh is default shell"
          stat:
            path: ~/.oh-my-zsh
          register: oh_my_zsh
        - name: "Oh My zsh> install"
          when: not (oh_my_zsh.stat.isdir is defined and oh_my_zsh.stat.isdir)
          shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
        - name: "Oh My zsh> set zsh as default shell"
          become: True
          become_user: root
          user:
            name: "{{ user }}"
            shell: /bin/zsh
    - name: Dotfiles
      become: True
      become_user: "{{ user }}"
      vars:
        repo: https://github.com/dvojak-cz/DotFiles.git
        path: "~/.dotfiles"
        ssh_repo: "git@github.com:dvojak-cz/DotFiles.git"
      block:
        - name: "Dotfiles> check if dotfiles directory exists"
          stat:
            path: "{{ path }}"
          register: dir
        - name: "Dotfiles> clone"
          when: not dir.stat.exists
          git:
            repo: "{{ repo }}"
            dest: "{{ path }}"
            clone: yes
            update: yes
        - name: "Dotfiles> set remote url to ssh"
          when: not dir.stat.exists
          command:
            cmd: git remote set-url origin {{ ssh_repo }}
            chdir: "{{ path }}"
        - name: "Dotfiles> apply"
          when: not dir.stat.exists
          command:
            cmd: "./install.sh"
            chdir: "{{ path }}"
    - name: Add jan tu sudo group
      user:
        name: "{{ user }}"
        groups: sudo
        append: true